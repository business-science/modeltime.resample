[{"path":"https://business-science.github.io/modeltime.resample/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 BUSINESS SCIENCE Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://business-science.github.io/modeltime.resample/articles/getting-started.html","id":"single-time-series","dir":"Articles","previous_headings":"","what":"Single Time Series","title":"Getting Started with Modeltime Resample","text":"Resampling gives us way compare multiple models across time. tutorial, ’ll get speed evaluating multiple models using resampling single time series.","code":""},{"path":"https://business-science.github.io/modeltime.resample/articles/getting-started.html","id":"getting-started-setup","dir":"Articles","previous_headings":"Single Time Series","what":"Getting Started Setup","title":"Getting Started with Modeltime Resample","text":"Load following R packages. ’ll work m750 data set.","code":"library(tidymodels) library(modeltime) library(modeltime.resample) library(tidyverse) library(timetk) m750 %>%   plot_time_series(date, value, .interactive = FALSE)"},{"path":"https://business-science.github.io/modeltime.resample/articles/getting-started.html","id":"step-1---make-a-cross-validation-training-plan","dir":"Articles","previous_headings":"Single Time Series","what":"Step 1 - Make a Cross-Validation Training Plan","title":"Getting Started with Modeltime Resample","text":"’ll use timetk::time_series_cv() generate 4 time-series resamples. Assess assessment window: \"2 years\" Initial training window: \"5 years\" Skip shift resample sets: \"2 years Slice Limit many resamples generate: 4 Next, visualize resample strategy make sure ’re happy choices.","code":"resamples_tscv <- time_series_cv(     data        = m750,     assess      = \"2 years\",     initial     = \"5 years\",     skip        = \"2 years\",     slice_limit = 4 )  resamples_tscv ## # Time Series Cross Validation Plan  ## # A tibble: 4 × 2 ##   splits          id     ##   <list>          <chr>  ## 1 <split [60/24]> Slice1 ## 2 <split [60/24]> Slice2 ## 3 <split [60/24]> Slice3 ## 4 <split [60/24]> Slice4 # Begin with a Cross Validation Strategy resamples_tscv %>%     tk_time_series_cv_plan() %>%     plot_time_series_cv_plan(date, value, .facet_ncol = 2, .interactive = FALSE)"},{"path":"https://business-science.github.io/modeltime.resample/articles/getting-started.html","id":"step-2---make-a-modeltime-table","dir":"Articles","previous_headings":"Single Time Series","what":"Step 2 - Make a Modeltime Table","title":"Getting Started with Modeltime Resample","text":"Create models add Modeltime Table Modeltime. ’ve already created 3 models (ARIMA, Prophet, GLMNET) saved results part modeltime package m750_models.","code":"m750_models ## # Modeltime Table ## # A tibble: 3 × 3 ##   .model_id .model     .model_desc             ##       <int> <list>     <chr>                   ## 1         1 <workflow> ARIMA(0,1,1)(0,1,1)[12] ## 2         2 <workflow> PROPHET                 ## 3         3 <workflow> GLMNET"},{"path":"https://business-science.github.io/modeltime.resample/articles/getting-started.html","id":"step-3---generate-resample-predictions","dir":"Articles","previous_headings":"Single Time Series","what":"Step 3 - Generate Resample Predictions","title":"Getting Started with Modeltime Resample","text":"Generate resample predictions using modeltime_fit_resamples(): Use m750_models (models) m750_training_resamples Internally, model refit training set resamples column added Modeltime Table: .resample_results contains resample predictions","code":"resamples_fitted <- m750_models %>%     modeltime_fit_resamples(         resamples = resamples_tscv,         control   = control_resamples(verbose = FALSE)     )  resamples_fitted ## # Modeltime Table ## # A tibble: 3 × 4 ##   .model_id .model     .model_desc             .resample_results ##       <int> <list>     <chr>                   <list>            ## 1         1 <workflow> ARIMA(0,1,1)(0,1,1)[12] <rsmp[+]>         ## 2         2 <workflow> PROPHET                 <rsmp[+]>         ## 3         3 <workflow> GLMNET                  <rsmp[+]>"},{"path":[]},{"path":"https://business-science.github.io/modeltime.resample/articles/getting-started.html","id":"accuracy-plot","dir":"Articles","previous_headings":"Single Time Series > Step 4 - Evaluate the Results","what":"Accuracy Plot","title":"Getting Started with Modeltime Resample","text":"Visualize model resample accuracy using plot_modeltime_resamples(). observations: Overall: ARIMA best overall performance, ’s always best. Slice 4: can see Slice 4 seems giving models issue. GLMNET model relatively robust Slice 4. Prophet gets thrown loop.","code":"resamples_fitted %>%     plot_modeltime_resamples(       .point_size  = 3,        .point_alpha = 0.8,       .interactive = FALSE     )"},{"path":"https://business-science.github.io/modeltime.resample/articles/getting-started.html","id":"accuracy-table","dir":"Articles","previous_headings":"Single Time Series > Step 4 - Evaluate the Results","what":"Accuracy Table","title":"Getting Started with Modeltime Resample","text":"can compare overall modeling approaches evaluating results modeltime_resample_accuracy(). default report average summary_fns = mean, can changed summary function list containing multiple summary functions (e.g. summary_fns = list(mean = mean, sd = sd)). table , ARIMA 6% lower RMSE, indicating ’s best choice consistent performance dataset.","code":"resamples_fitted %>%     modeltime_resample_accuracy(summary_fns = mean) %>%     table_modeltime_accuracy(.interactive = FALSE)"},{"path":"https://business-science.github.io/modeltime.resample/articles/getting-started.html","id":"wrapup","dir":"Articles","previous_headings":"","what":"Wrapup","title":"Getting Started with Modeltime Resample","text":"Resampling gives us way compare multiple models across time. example, can see ARIMA model performs better Prophet GLMNET models lower RMSE. won’t always case (every time series different). quick overview Getting Started Modeltime Resample. learn tune, ensemble, work multiple groups Time Series, take High-Performance Time Series Course.","code":""},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"panel-data-tutorial-overview","dir":"Articles","previous_headings":"","what":"Panel Data Tutorial Overview","title":"Resampling Panel Data","text":"advanced tutorial. Working Panel Data requires working multiple time series groups time, need comfortable setting datasets required generate training sets forecast sets. cover working Panel Data Time Series Groups High-Performance Time Series Course.","code":""},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"libraries","dir":"Articles","previous_headings":"","what":"Libraries","title":"Resampling Panel Data","text":"Load following R packages.","code":"library(tidymodels) library(modeltime) library(modeltime.resample) library(timetk) library(tidyverse) library(tidyquant)"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Resampling Panel Data","text":"’ll use walmart_sales_weekly dataset timetk. contains 7 time series groups, correspond revenue time seven departments one Walmart Store.","code":"walmart_sales_weekly %>%   group_by(id) %>%   plot_time_series(Date, Weekly_Sales, .facet_ncol = 3, .interactive = FALSE)"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"Resampling Panel Data","text":"’ll create 2 datasets incorporate grouping variable: Training Data Set, data_prepared_tbl: Dataset contains information training region time series group Forecast Data Set, future_tbl: Dataset contains information forecast region time series group. ’ll extend time series group \"3 months\" based business forecast needs.","code":"# Full = Training + Forecast Datasets full_data_tbl <- walmart_sales_weekly %>%   select(id, Date, Weekly_Sales) %>%      # Apply Group-wise Time Series Manipulations   group_by(id) %>%   future_frame(     .date_var   = Date,     .length_out = \"3 months\",     .bind_data  = TRUE   ) %>%   ungroup() %>%      # Consolidate IDs   mutate(id = droplevels(id))  # Training Data data_prepared_tbl <- full_data_tbl %>%   filter(!is.na(Weekly_Sales))  # Forecast Data future_tbl <- full_data_tbl %>%   filter(is.na(Weekly_Sales))"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"resampling-panel-data","dir":"Articles","previous_headings":"","what":"Resampling Panel Data","title":"Resampling Panel Data","text":"first step make resample strategy. business objective forecast 3 months ’ll use time_series_cv() following strategy: assess: 3 months. Corresponds business objective. skip: 3 months. Use 3 months avoid overlapping assessment sets. cumulative: TRUE. Maximizes Training Set (alternatively initial = “18 months” sliding training sets) slice_limit: 6. Keep 6 largest train/test resamples prevent observations. go one full year, able take advantage week year feature. generates 6 resample sets. can visualize resample sets plot_time_series_cv_plan(). look little crazy multiple time series groups. important thing make sure red blue parts line expected relation sampling strategy.","code":"walmart_tscv <- data_prepared_tbl %>%   time_series_cv(     date_var    = Date,      assess      = \"3 months\",     skip        = \"3 months\",     cumulative  = TRUE,     slice_limit = 6   )  walmart_tscv ## # Time Series Cross Validation Plan  ## # A tibble: 6 × 2 ##   splits           id     ##   <list>           <chr>  ## 1 <split [917/84]> Slice1 ## 2 <split [833/84]> Slice2 ## 3 <split [749/84]> Slice3 ## 4 <split [665/84]> Slice4 ## 5 <split [581/84]> Slice5 ## 6 <split [497/84]> Slice6 walmart_tscv %>%   tk_time_series_cv_plan() %>%   plot_time_series_cv_plan(Date, Weekly_Sales,                             .facet_ncol = 2, .interactive = F)"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"modeling","dir":"Articles","previous_headings":"","what":"Modeling","title":"Resampling Panel Data","text":"’ll create: 1 Recipe: applies engineered features calendar variables 3 Fitted Models: Prophet, XGBoost, Prophet Boost fitted data_prepared_tbl dataset","code":""},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"recipe","dir":"Articles","previous_headings":"Modeling","what":"Recipe","title":"Resampling Panel Data","text":"’ll create recipe leverages step_timeseries_signature() generate calendar features.","code":"recipe_spec <- recipe(Weekly_Sales ~ .,                        data = training(walmart_tscv$splits[[1]])) %>%   step_timeseries_signature(Date) %>%   step_rm(matches(\"(.iso$)|(.xts$)|(day)|(hour)|(minute)|(second)|(am.pm)\")) %>%   step_mutate(Date_week = factor(Date_week, ordered = TRUE)) %>%   step_dummy(all_nominal(), one_hot = TRUE)"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"models","dir":"Articles","previous_headings":"Modeling","what":"Models","title":"Resampling Panel Data","text":"Let’s generate 3 Models: Prophet, XGBoost, Prophet Boost.","code":""},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"prophet","dir":"Articles","previous_headings":"Modeling > Models","what":"Prophet","title":"Resampling Panel Data","text":"","code":"wflw_fit_prophet <- workflow() %>%   add_model(     prophet_reg() %>% set_engine(\"prophet\")    ) %>%   add_recipe(recipe_spec) %>%   fit(training(walmart_tscv$splits[[1]]))"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"xgboost","dir":"Articles","previous_headings":"Modeling > Models","what":"XGBoost","title":"Resampling Panel Data","text":"","code":"wflw_fit_xgboost <- workflow() %>%   add_model(     boost_tree(\"regression\") %>% set_engine(\"xgboost\")    ) %>%   add_recipe(recipe_spec %>% step_rm(Date)) %>%   fit(training(walmart_tscv$splits[[1]]))"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"prophet-boost","dir":"Articles","previous_headings":"Modeling > Models","what":"Prophet Boost","title":"Resampling Panel Data","text":"","code":"wflw_fit_prophet_boost <- workflow() %>%   add_model(     prophet_boost(       seasonality_daily  = FALSE,        seasonality_weekly = FALSE,       seasonality_yearly = FALSE     ) %>%        set_engine(\"prophet_xgboost\")    ) %>%   add_recipe(recipe_spec) %>%   fit(training(walmart_tscv$splits[[1]]))"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"organize-in-a-modeltime-table","dir":"Articles","previous_headings":"Modeling","what":"Organize in a Modeltime Table","title":"Resampling Panel Data","text":"Add 3 fitted models Modeltime Table modeltime_table().","code":"model_tbl <- modeltime_table(   wflw_fit_prophet,   wflw_fit_xgboost,   wflw_fit_prophet_boost )  model_tbl ## # Modeltime Table ## # A tibble: 3 × 3 ##   .model_id .model     .model_desc               ##       <int> <list>     <chr>                     ## 1         1 <workflow> PROPHET W/ REGRESSORS     ## 2         2 <workflow> XGBOOST                   ## 3         3 <workflow> PROPHET W/ XGBOOST ERRORS"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"assess-a-single-resample-split","dir":"Articles","previous_headings":"Modeling","what":"Assess a Single Resample Split","title":"Resampling Panel Data","text":"can make Panel Data forecast, forecasts time series groups . method much efficient iteratively performing predictions. However, time series models respond well approach. can visualize Panel Data forecasts single split. ’s bit difficult tell model performing. Panel Forecasting | 7 Time Series Groups","code":"# Calibrate using the Test Sample calibration_tbl <- model_tbl %>%   modeltime_calibrate(testing(walmart_tscv$splits[[1]]))  # Forecast the Test Sample forecast_panel_tbl <- calibration_tbl %>%   modeltime_forecast(     new_data      = testing(walmart_tscv$splits[[1]]),     actual_data   = data_prepared_tbl,     # Keep data allows us keep the ID feature for the time series groups     keep_data = TRUE   ) forecast_panel_tbl %>%   group_by(id) %>%   plot_modeltime_forecast(     .facet_ncol  = 3,     .y_intercept = 0,      .interactive = FALSE,     .title       = \"Panel Forecasting | 7 Time Series Groups\"   )"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"quantifying-prediction-error-over-time","dir":"Articles","previous_headings":"","what":"Quantifying Prediction Error Over Time","title":"Resampling Panel Data","text":"’ve made predictions, doesn’t tell us models time. need quantify prediction error. , ’ll evaluate models using time series resamples. technique involves making resamples across time series windows refitting models resample data sets, producing predictions, quantifying error predictions.","code":""},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"apply-models-to-resamples","dir":"Articles","previous_headings":"Quantifying Prediction Error Over Time","what":"Apply Models to Resamples","title":"Resampling Panel Data","text":"model_tbl (models) walmart_tscv (resamples) , ready iteratively fit predict models resampling plan sets, producing resample predictions. new column (“.resample_results”) containing resample predictions added original model_tbl.","code":"resample_results <- model_tbl %>%   modeltime_fit_resamples(     resamples = walmart_tscv,     control   = control_resamples(verbose = FALSE)   ) resample_results ## # Modeltime Table ## # A tibble: 3 × 4 ##   .model_id .model     .model_desc               .resample_results ##       <int> <list>     <chr>                     <list>            ## 1         1 <workflow> PROPHET W/ REGRESSORS     <rsmp[+]>         ## 2         2 <workflow> XGBOOST                   <rsmp[+]>         ## 3         3 <workflow> PROPHET W/ XGBOOST ERRORS <rsmp[+]>"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"evaluate-resample-accuracy","dir":"Articles","previous_headings":"Quantifying Prediction Error Over Time","what":"Evaluate Resample Accuracy","title":"Resampling Panel Data","text":"resampled predictions, can now assess robustness models time. increase confidence stability models, enabling us select best model(s) time-varying data.","code":""},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"resample-accuracy-plot","dir":"Articles","previous_headings":"Quantifying Prediction Error Over Time > Evaluate Resample Accuracy","what":"Resample Accuracy Plot","title":"Resampling Panel Data","text":"can visually evaluate accuracy plot_modeltime_resamples(). can see Prophet Boost XGBoost Models much lower average RMSE compared Prophet w/ Regressors Model.","code":"resample_results %>%   plot_modeltime_resamples(     .summary_fn  = mean,      .point_size  = 3,     .interactive = FALSE   )"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"resample-accuracy-table","dir":"Articles","previous_headings":"Quantifying Prediction Error Over Time > Evaluate Resample Accuracy","what":"Resample Accuracy Table","title":"Resampling Panel Data","text":"can get interactive static table using modeltime_resample_accuracy(). ’m interested average metric value also variability (standard deviation). can get adding multiple summary functions using list().","code":"resample_results %>%   modeltime_resample_accuracy(summary_fns = list(mean = mean, sd = sd)) %>%   table_modeltime_accuracy(.interactive = FALSE)"},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"model-selection","dir":"Articles","previous_headings":"Quantifying Prediction Error Over Time","what":"Model Selection","title":"Resampling Panel Data","text":"interested single model, select either XGBoost Model Prophet Boost Model, lower RMSE Prophet w/ Regressors Model.","code":""},{"path":"https://business-science.github.io/modeltime.resample/articles/panel-data.html","id":"wrapup","dir":"Articles","previous_headings":"","what":"Wrapup","title":"Resampling Panel Data","text":"Working Panel Data can challenging due managing multiple models, overlapping time series groups, multiple resample sets. Modeltime Resample makes working Panel Data much easier. saw can evaluate multiple models varying time series windows. increased confidence selecting either XGBoost Prophet Boost models best data. quick overview working Panel Data. learn evaluate Panel Data -depth, take High-Performance Time Series Course.","code":""},{"path":"https://business-science.github.io/modeltime.resample/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matt Dancho. Author, maintainer. Business Science. Copyright holder.","code":""},{"path":"https://business-science.github.io/modeltime.resample/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dancho M (2025). modeltime.resample: Resampling Tools Time Series Forecasting. R package version 0.2.4.9000, https://business-science.github.io/modeltime.resample/.","code":"@Manual{,   title = {modeltime.resample: Resampling Tools for Time Series Forecasting},   author = {Matt Dancho},   year = {2025},   note = {R package version 0.2.4.9000},   url = {https://business-science.github.io/modeltime.resample/}, }"},{"path":"https://business-science.github.io/modeltime.resample/index.html","id":"modeltimeresample-","dir":"","previous_headings":"","what":"Resampling Tools for Time Series Forecasting","title":"Resampling Tools for Time Series Forecasting","text":"Model Performance Stability Assessment Tools Single Time Series, Panel Data, & Cross-Sectional Time Series Analysis modeltime extension implements forecast resampling tools assess time-based model performance stability single time series, panel data, cross-sectional time series analysis.","code":""},{"path":"https://business-science.github.io/modeltime.resample/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Resampling Tools for Time Series Forecasting","text":"CRAN version: Development version (latest features):","code":"install.packages(\"modeltime.resample\") remotes::install_github(\"business-science/modeltime.resample\")"},{"path":"https://business-science.github.io/modeltime.resample/index.html","id":"why-modeltime-resample","dir":"","previous_headings":"","what":"Why Modeltime Resample?","title":"Resampling Tools for Time Series Forecasting","text":"Resampling time series important strategy evaluate stability models time. However, ’s pain requires multiple -loops generate predictions multiple models potentially multiple time series groups. Modeltime Resample simplifies iterative forecasting process taking pain away. Modeltime Resample makes easy : Iteratively generate predictions time series cross-validation plans. Evaluate resample predictions compare many time series models across multiple time-series windows. example Resampling Panel Data, can see Prophet Boost XGBoost Models outperform Prophet Regressors Walmart Time Series Panel Dataset using 6-Slice Time Series Cross Validation plan shown . Model Accuracy 6 Time Series Resamples Resampled Model Accuracy (3 Models, 6 Resamples, 7 Time Series Groups)","code":""},{"path":"https://business-science.github.io/modeltime.resample/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Resampling Tools for Time Series Forecasting","text":"Getting Started Modeltime: Learn basics forecasting Modeltime. Resampling Single Time Series: Learn basics time series resample evaluation. Resampling Panel Data: advanced tutorial resample evaluation multiple time series groups (Panel Data)","code":""},{"path":"https://business-science.github.io/modeltime.resample/index.html","id":"meet-the-modeltime-ecosystem","dir":"","previous_headings":"","what":"Meet the modeltime ecosystem","title":"Resampling Tools for Time Series Forecasting","text":"Learn growing ecosystem forecasting packages modeltime ecosystem growing Modeltime part growing ecosystem Modeltime forecasting packages. Modeltime (Machine Learning) Modeltime H2O (AutoML) Modeltime GluonTS (Deep Learning) Modeltime Ensemble (Blending Forecasts) Modeltime Resample (Backtesting) Timetk (Feature Engineering, Data Wrangling, Time Series Visualization)","code":""},{"path":"https://business-science.github.io/modeltime.resample/index.html","id":"take-the-high-performance-forecasting-course","dir":"","previous_headings":"","what":"Take the High-Performance Forecasting Course","title":"Resampling Tools for Time Series Forecasting","text":"Become forecasting expert organization  High-Performance Time Series Course","code":""},{"path":"https://business-science.github.io/modeltime.resample/index.html","id":"time-series-is-changing","dir":"","previous_headings":"Take the High-Performance Forecasting Course","what":"Time Series is Changing","title":"Resampling Tools for Time Series Forecasting","text":"Time series changing. Businesses now need 10,000+ time series forecasts every day. call High-Performance Time Series Forecasting System (HPTSF) - Accurate, Robust, Scalable Forecasting. High-Performance Forecasting Systems save companies improving accuracy scalability. Imagine happen career can provide organization “High-Performance Time Series Forecasting System” (HPTSF System).","code":""},{"path":"https://business-science.github.io/modeltime.resample/index.html","id":"how-to-learn-high-performance-time-series-forecasting","dir":"","previous_headings":"Take the High-Performance Forecasting Course","what":"How to Learn High-Performance Time Series Forecasting","title":"Resampling Tools for Time Series Forecasting","text":"teach build HPTFS System High-Performance Time Series Forecasting Course. learn: Time Series Machine Learning (cutting-edge) Modeltime - 30+ Models (Prophet, ARIMA, XGBoost, Random Forest, & many ) Deep Learning GluonTS (Competition Winners) Time Series Preprocessing, Noise Reduction, & Anomaly Detection Feature engineering using lagged variables & external regressors Hyperparameter Tuning Time series cross-validation Ensembling Multiple Machine Learning & Univariate Modeling Techniques (Competition Winner) Scalable Forecasting - Forecast 1000+ time series parallel . Become Time Series Expert organization. Take High-Performance Time Series Forecasting Course","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/get_target_text_from_resamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets the target variable as text from unnested resamples — get_target_text_from_resamples","title":"Gets the target variable as text from unnested resamples — get_target_text_from_resamples","text":"internal function used unnest_modeltime_resamples().","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/get_target_text_from_resamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets the target variable as text from unnested resamples — get_target_text_from_resamples","text":"","code":"get_target_text_from_resamples(data, column_before_target = \".row\")"},{"path":"https://business-science.github.io/modeltime.resample/reference/get_target_text_from_resamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets the target variable as text from unnested resamples — get_target_text_from_resamples","text":"data Unnested resample results column_before_target text column located target variable. \".row\".","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/get_target_text_from_resamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets the target variable as text from unnested resamples — get_target_text_from_resamples","text":"","code":"# The .resample_results column is deeply nested m750_training_resamples_fitted #> # Modeltime Table #> # A tibble: 3 × 4 #>   .model_id .model     .model_desc             .resample_results #>       <int> <list>     <chr>                   <list>            #> 1         1 <workflow> ARIMA(0,1,1)(0,1,1)[12] <rsmp[+]>         #> 2         2 <workflow> PROPHET                 <rsmp[+]>         #> 3         3 <workflow> GLMNET                  <rsmp[+]>          # Unnest and prepare the resample predictions for evaluation unnest_modeltime_resamples(m750_training_resamples_fitted) %>%     get_target_text_from_resamples() #> [1] \"value\""},{"path":"https://business-science.github.io/modeltime.resample/reference/m750_training_resamples_fitted.html","id":null,"dir":"Reference","previous_headings":"","what":"Time Series Cross Validation Resample Predictions (Results) from the M750 Data (Training Set) — m750_training_resamples_fitted","title":"Time Series Cross Validation Resample Predictions (Results) from the M750 Data (Training Set) — m750_training_resamples_fitted","text":"Time Series Cross Validation Resample Predictions (Results) M750 Data (Training Set)","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/m750_training_resamples_fitted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Series Cross Validation Resample Predictions (Results) from the M750 Data (Training Set) — m750_training_resamples_fitted","text":"","code":"m750_training_resamples_fitted"},{"path":"https://business-science.github.io/modeltime.resample/reference/m750_training_resamples_fitted.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Time Series Cross Validation Resample Predictions (Results) from the M750 Data (Training Set) — m750_training_resamples_fitted","text":"Modeltime Table fitted resamples predictions .resample_results column","code":""},{"path":[]},{"path":[]},{"path":"https://business-science.github.io/modeltime.resample/reference/m750_training_resamples_fitted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time Series Cross Validation Resample Predictions (Results) from the M750 Data (Training Set) — m750_training_resamples_fitted","text":"","code":"m750_training_resamples_fitted #> # Modeltime Table #> # A tibble: 3 × 4 #>   .model_id .model     .model_desc             .resample_results #>       <int> <list>     <chr>                   <list>            #> 1         1 <workflow> ARIMA(0,1,1)(0,1,1)[12] <rsmp[+]>         #> 2         2 <workflow> PROPHET                 <rsmp[+]>         #> 3         3 <workflow> GLMNET                  <rsmp[+]>"},{"path":"https://business-science.github.io/modeltime.resample/reference/mdl_time_fit_resamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Modeltime Fit Resample Helpers — mdl_time_fit_resamples","title":"Modeltime Fit Resample Helpers — mdl_time_fit_resamples","text":"Used low-level resample fitting modeltime, parnsip workflow models functions intended user use.","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/mdl_time_fit_resamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modeltime Fit Resample Helpers — mdl_time_fit_resamples","text":"","code":"mdl_time_fit_resamples(object, resamples, control = control_resamples())"},{"path":"https://business-science.github.io/modeltime.resample/reference/mdl_time_fit_resamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modeltime Fit Resample Helpers — mdl_time_fit_resamples","text":"object Modeltime Table resamples rset resample object. Used generate sub-model predictions meta-learner. See timetk::time_series_cv() rsample::vfold_cv() making resamples. control tune::control_resamples() object provide control resampling process.","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/mdl_time_fit_resamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modeltime Fit Resample Helpers — mdl_time_fit_resamples","text":"tibble forecast features","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/modeltime_fit_resamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits Models in a Modeltime Table to Resamples — modeltime_fit_resamples","title":"Fits Models in a Modeltime Table to Resamples — modeltime_fit_resamples","text":"Resampled predictions commonly used : Analyzing accuracy stability models inputs Ensemble methods (refer modeltime.ensemble package)","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/modeltime_fit_resamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits Models in a Modeltime Table to Resamples — modeltime_fit_resamples","text":"","code":"modeltime_fit_resamples(object, resamples, control = control_resamples())"},{"path":"https://business-science.github.io/modeltime.resample/reference/modeltime_fit_resamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits Models in a Modeltime Table to Resamples — modeltime_fit_resamples","text":"object Modeltime Table resamples rset resample object. Used generate sub-model predictions meta-learner. See timetk::time_series_cv() rsample::vfold_cv() making resamples. control tune::control_resamples() object provide control resampling process.","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/modeltime_fit_resamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits Models in a Modeltime Table to Resamples — modeltime_fit_resamples","text":"Modeltime Table (mdl_time_tbl) object column containing resample results (.resample_results)","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/modeltime_fit_resamples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fits Models in a Modeltime Table to Resamples — modeltime_fit_resamples","text":"function wrapper tune::fit_resamples() iteratively train predict models contained Modeltime Table resample objects. One difference tune::fit_resamples() modeltime_fit_resamples() predictions always returned (.e. control = tune::control_resamples(save_pred = TRUE)). needed ensemble_model_spec(). Resampled Prediction Accuracy Calculating Accuracy Metrics models fit resamples can help understand model performance stability different forecasting windows. See modeltime_resample_accuracy() getting resampled prediction accuracy model. Ensembles Fitting Predicting Resamples useful creating Stacked Ensembles using modeltime.ensemble::ensemble_model_spec(). sub-model cross-validation predictions used input meta-learner model.","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/modeltime_fit_resamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fits Models in a Modeltime Table to Resamples — modeltime_fit_resamples","text":"","code":"library(tidymodels) #> ── Attaching packages ────────────────────────────────────── tidymodels 1.3.0 ── #> ✔ broom        1.0.9     ✔ recipes      1.3.1 #> ✔ dials        1.4.1     ✔ rsample      1.3.1 #> ✔ dplyr        1.1.4     ✔ tibble       3.3.0 #> ✔ ggplot2      3.5.2     ✔ tidyr        1.3.1 #> ✔ infer        1.0.9     ✔ tune         1.3.0 #> ✔ modeldata    1.5.1     ✔ workflows    1.3.0 #> ✔ parsnip      1.3.2     ✔ workflowsets 1.1.1 #> ✔ purrr        1.1.0     ✔ yardstick    1.3.2 #> ── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ── #> ✖ purrr::discard() masks scales::discard() #> ✖ dplyr::filter()  masks stats::filter() #> ✖ dplyr::lag()     masks stats::lag() #> ✖ recipes::step()  masks stats::step() library(modeltime) library(timetk) library(magrittr) #>  #> Attaching package: ‘magrittr’ #> The following object is masked from ‘package:tidyr’: #>  #>     extract #> The following object is masked from ‘package:purrr’: #>  #>     set_names  # Make resamples resamples_tscv <- training(m750_splits) %>%     time_series_cv(         assess      = \"2 years\",         initial     = \"5 years\",         skip        = \"2 years\",         # Normally we do more than one slice, but this speeds up the example         slice_limit = 1     ) #> Using date_var: date  # \\donttest{ # Fit and generate resample predictions m750_models_resample <- m750_models %>%     modeltime_fit_resamples(         resamples = resamples_tscv,         control   = control_resamples(verbose = TRUE)     ) #> ── Fitting Resamples ──────────────────────────────────────────── #>  #> • Model ID: 1 ARIMA(0,1,1)(0,1,1)[12] #> i Slice1: preprocessor 1/1 #> ! Slice1: preprocessor 1/1: #>   `keep_original_cols` was added to `step_dummy()` after this r... #>   ℹ Regenerate your recipe to avoid this warning. #> ✓ Slice1: preprocessor 1/1 #> i Slice1: preprocessor 1/1, model 1/1 #> frequency = 12 observations per 1 year #> ✓ Slice1: preprocessor 1/1, model 1/1 #> i Slice1: preprocessor 1/1, model 1/1 (extracts) #> i Slice1: preprocessor 1/1, model 1/1 (predictions) #> • Model ID: 2 PROPHET #> i Slice1: preprocessor 1/1 #> ! Slice1: preprocessor 1/1: #>   `keep_original_cols` was added to `step_dummy()` after this r... #>   ℹ Regenerate your recipe to avoid this warning. #> ✓ Slice1: preprocessor 1/1 #> i Slice1: preprocessor 1/1, model 1/1 #> Disabling weekly seasonality. Run prophet with weekly.seasonality=TRUE to override this. #> Disabling daily seasonality. Run prophet with daily.seasonality=TRUE to override this. #> ✓ Slice1: preprocessor 1/1, model 1/1 #> i Slice1: preprocessor 1/1, model 1/1 (extracts) #> i Slice1: preprocessor 1/1, model 1/1 (predictions) #> • Model ID: 3 GLMNET #> i Slice1: preprocessor 1/1 #> ! Slice1: preprocessor 1/1: #>   `keep_original_cols` was added to `step_dummy()` after this r... #>   ℹ Regenerate your recipe to avoid this warning. #> ✓ Slice1: preprocessor 1/1 #> i Slice1: preprocessor 1/1, model 1/1 #> ✓ Slice1: preprocessor 1/1, model 1/1 #> i Slice1: preprocessor 1/1, model 1/1 (extracts) #> i Slice1: preprocessor 1/1, model 1/1 (predictions) #> 4.932 sec elapsed #>   # A new data frame is created from the Modeltime Table #  with a column labeled, '.resample_results' m750_models_resample #> # Modeltime Table #> # A tibble: 3 × 4 #>   .model_id .model     .model_desc             .resample_results #>       <int> <list>     <chr>                   <list>            #> 1         1 <workflow> ARIMA(0,1,1)(0,1,1)[12] <rsmp[+]>         #> 2         2 <workflow> PROPHET                 <rsmp[+]>         #> 3         3 <workflow> GLMNET                  <rsmp[+]>         # }"},{"path":"https://business-science.github.io/modeltime.resample/reference/modeltime_resample_accuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Accuracy Metrics from Modeltime Resamples — modeltime_resample_accuracy","title":"Calculate Accuracy Metrics from Modeltime Resamples — modeltime_resample_accuracy","text":"wrapper yardstick simplifies time series regression accuracy metric calculations Modeltime Table resampled fitted using modeltime_fit_resamples().","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/modeltime_resample_accuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Accuracy Metrics from Modeltime Resamples — modeltime_resample_accuracy","text":"","code":"modeltime_resample_accuracy(   object,   summary_fns = mean,   metric_set = default_forecast_accuracy_metric_set(),   ... )"},{"path":"https://business-science.github.io/modeltime.resample/reference/modeltime_resample_accuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Accuracy Metrics from Modeltime Resamples — modeltime_resample_accuracy","text":"object Modeltime Table column '.resample_results' (output modeltime_fit_resamples()) summary_fns One functions analyze resamples. default mean(). Possible values : NULL, returns resamples untransformed. function, e.g. mean. purrr-style lambda, e.g. ~ mean(.x, na.rm = TRUE) list functions/lambdas, e.g. list(mean = mean, sd = sd) metric_set yardstick::metric_set() used summarize one forecast accuracy (regression) metrics. ... Additional arguments passed function calls summary_fns.","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/modeltime_resample_accuracy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Accuracy Metrics from Modeltime Resamples — modeltime_resample_accuracy","text":"#' Default Accuracy Metrics following accuracy metrics included default via modeltime::default_forecast_accuracy_metric_set(): MAE - Mean absolute error, yardstick::mae() MAPE - Mean absolute percentage error, yardstick::mape() MASE  - Mean absolute scaled error, yardstick::mase() SMAPE - Symmetric mean absolute percentage error, yardstick::smape() RMSE  - Root mean squared error, yardstick::rmse() RSQ   - R-squared, yardstick::rsq() Summary Functions default, modeltime_resample_accuracy() returns average accuracy metrics resample prediction. user can change default behavior using summary_fns. Simply pass one Summary Functions. Internally, functions passed dplyr::across(.fns), applies summary functions. Returning Unsummarized Results can pass summary_fns = NULL return unsummarized results .resample_id. Professional Tables (Interactive & Static) Use modeltime::table_modeltime_accuracy() format results reporting reactable (interactive) gt (static) formats, perfect Shiny Apps (interactive) PDF Reports (static).","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/modeltime_resample_accuracy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Accuracy Metrics from Modeltime Resamples — modeltime_resample_accuracy","text":"","code":"library(modeltime)  # Mean (Default) m750_training_resamples_fitted %>%     modeltime_resample_accuracy() %>%     table_modeltime_accuracy(.interactive = FALSE)     Accuracy Table     .model_id       .model_desc       .type       n       mae       mape       mase       smape       rmse       rsq     1 ARIMA(0,1,1)(0,1,1)[12] Resamples 6 294.51 2.95 1.18 2.94 355.49 0.802 PROPHET Resamples 6 458.05 4.59 1.85 4.55 515.49 0.783 GLMNET Resamples 6 706.10 7.16 2.80 6.92 753.04 0.77 # Mean and Standard Deviation m750_training_resamples_fitted %>%     modeltime_resample_accuracy(         summary_fns = list(mean = mean, sd = sd)     ) %>%     table_modeltime_accuracy(.interactive = FALSE)     Accuracy Table     .model_id       .model_desc       .type       n       mae_mean       mae_sd       mape_mean       mape_sd       mase_mean       mase_sd       smape_mean       smape_sd       rmse_mean       rmse_sd       rsq_mean       rsq_sd     1 ARIMA(0,1,1)(0,1,1)[12] Resamples 6 294.51 121.98 2.95 1.27 1.18 0.56 2.94 1.24 355.49 138.68 0.80 0.152 PROPHET Resamples 6 458.05 196.09 4.59 1.98 1.85 0.91 4.55 1.86 515.49 175.26 0.78 0.093 GLMNET Resamples 6 706.10 248.29 7.16 2.62 2.80 1.11 6.92 2.41 753.04 252.75 0.77 0.16 # When summary_fns = NULL, returns the unsummarized resample results m750_training_resamples_fitted %>%     modeltime_resample_accuracy(         summary_fns = NULL     ) #> # A tibble: 18 × 10 #>    .model_id .model_desc  .resample_id .type   mae  mape  mase smape  rmse   rsq #>        <int> <chr>        <chr>        <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1         1 ARIMA(0,1,1… Slice1       Resa…  182.  1.79 0.637  1.80  212. 0.950 #>  2         1 ARIMA(0,1,1… Slice2       Resa…  330.  3.24 1.30   3.17  406. 0.729 #>  3         1 ARIMA(0,1,1… Slice3       Resa…  359.  3.57 1.55   3.64  415. 0.859 #>  4         1 ARIMA(0,1,1… Slice4       Resa…  456.  4.76 2.01   4.61  530. 0.561 #>  5         1 ARIMA(0,1,1… Slice5       Resa…  122.  1.23 0.524  1.22  165. 0.926 #>  6         1 ARIMA(0,1,1… Slice6       Resa…  317.  3.12 1.05   3.20  407. 0.763 #>  7         2 PROPHET      Slice1       Resa…  450.  4.54 1.57   4.40  509. 0.869 #>  8         2 PROPHET      Slice2       Resa…  449.  4.34 1.76   4.45  494. 0.745 #>  9         2 PROPHET      Slice3       Resa…  475.  4.72 2.05   4.85  556. 0.660 #> 10         2 PROPHET      Slice4       Resa…  317.  3.33 1.39   3.26  362. 0.781 #> 11         2 PROPHET      Slice5       Resa…  813.  8.22 3.49   7.89  829. 0.897 #> 12         2 PROPHET      Slice6       Resa…  244.  2.40 0.808  2.45  344. 0.755 #> 13         3 GLMNET       Slice1       Resa…  893.  8.90 3.12   8.48  926. 0.845 #> 14         3 GLMNET       Slice2       Resa…  583.  5.73 2.29   5.53  647. 0.654 #> 15         3 GLMNET       Slice3       Resa…  874.  9.07 3.77   8.62  917. 0.901 #> 16         3 GLMNET       Slice4       Resa…  964. 10.1  4.24   9.53 1022. 0.494 #> 17         3 GLMNET       Slice5       Resa…  313.  3.17 1.34   3.11  339. 0.918 #> 18         3 GLMNET       Slice6       Resa…  609.  6.03 2.02   6.26  667. 0.783"},{"path":"https://business-science.github.io/modeltime.resample/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://business-science.github.io/modeltime.resample/reference/plot_modeltime_resamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Resampling Accuracy Plots — plot_modeltime_resamples","title":"Interactive Resampling Accuracy Plots — plot_modeltime_resamples","text":"convenient plotting function visualizing resampling accuracy resample set model Modeltime Table.","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/plot_modeltime_resamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Resampling Accuracy Plots — plot_modeltime_resamples","text":"","code":"plot_modeltime_resamples(   .data,   .metric_set = default_forecast_accuracy_metric_set(),   .summary_fn = mean,   ...,   .facet_ncol = NULL,   .facet_scales = \"free_x\",   .point_show = TRUE,   .point_size = 1,   .point_shape = 16,   .point_alpha = 1,   .summary_line_show = TRUE,   .summary_line_size = 0.5,   .summary_line_type = 1,   .summary_line_alpha = 1,   .x_intercept = NULL,   .x_intercept_color = \"red\",   .x_intercept_size = 0.5,   .legend_show = TRUE,   .legend_max_width = 40,   .title = \"Resample Accuracy Plot\",   .x_lab = \"\",   .y_lab = \"\",   .color_lab = \"Legend\",   .interactive = TRUE )"},{"path":"https://business-science.github.io/modeltime.resample/reference/plot_modeltime_resamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive Resampling Accuracy Plots — plot_modeltime_resamples","text":".data modeltime table includes column .resample_results containing resample results. See modeltime_fit_resamples() information. .metric_set yardstick::metric_set() used summarize one forecast accuracy (regression) metrics. .summary_fn single summary function applied aggregate metrics across resample sets. Default: mean. ... Additional arguments passed .summary_fn. .facet_ncol Default: NULL. number facet columns. .facet_scales Default: free_x. .point_show Whether show individual points combination models metrics. Default: TRUE. .point_size Controls point size. Default: 1. .point_shape Controls point shape. Default: 16. .point_alpha Controls opacity points. Default: 1 (full opacity). .summary_line_show Whether show summary lines. Default: TRUE. .summary_line_size Controls summary line width. Default: 0.5. .summary_line_type Controls summary line type. Default: 1. .summary_line_alpha Controls summary line opacity. Default: 1 (full opacity). .x_intercept Numeric. Adds x-intercept location (e.g. 0). Default: NULL. .x_intercept_color Controls x-intercept color. Default: \"red\". .x_intercept_size Controls x-intercept linewidth. Default: 0.5. .legend_show Logical. Whether show legend. Can save space long model descriptions. .legend_max_width Numeric. width truncation apply legend text. .title Title plot .x_lab X-axis label plot .y_lab Y-axis label plot .color_lab Legend label color_var used. .interactive Returns either static (ggplot2) visualization interactive (plotly) visualization","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/plot_modeltime_resamples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interactive Resampling Accuracy Plots — plot_modeltime_resamples","text":"Default Accuracy Metrics following accuracy metrics included default via modeltime::default_forecast_accuracy_metric_set(): MAE - Mean absolute error, yardstick::mae() MAPE - Mean absolute percentage error, yardstick::mape() MASE  - Mean absolute scaled error, yardstick::mase() SMAPE - Symmetric mean absolute percentage error, yardstick::smape() RMSE  - Root mean squared error, yardstick::rmse() RSQ   - R-squared, yardstick::rsq() Summary Function Users can supply single summary function (e.g. mean) summarize resample metrics model.","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/plot_modeltime_resamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive Resampling Accuracy Plots — plot_modeltime_resamples","text":"","code":"m750_training_resamples_fitted %>%     plot_modeltime_resamples(         .interactive = FALSE     )"},{"path":"https://business-science.github.io/modeltime.resample/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"sym() creates symbol string syms() creates list symbols character vector. enquo() enquos() delay execution one several function arguments. enquo() returns single quoted expression, like blueprint delayed computation. enquos() returns list quoted expressions. expr() quotes new expression locally. mostly useful build new expressions around arguments captured enquo() enquos(): expr(mean(!!enquo(arg), na.rm = TRUE)). as_name() transforms quoted variable name string. Supplying something else quoted variable name error. unlike as_label() also returns single string supports kind R object input, including quoted function calls vectors. purpose summarise object single label. label often suitable default name. know quoted expression contains (instance expressions captured enquo() variable name, call function, unquoted constant), use as_label(). know quoted simple variable name, like enforce , use as_name(). learn tidy eval use tools, visit Metaprogramming section Advanced R.","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/time_series_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Time Series Resampling Sets and Plans — time_series_cv","title":"Time Series Resampling Sets and Plans — time_series_cv","text":"resampling tools exported timetk package. timetk::time_series_cv(): Creates resample sets using time series cross validation timetk::time_series_split(): Makes initial time series split timetk::plot_time_series_cv_plan(): Plots cross validation plan timetk::tk_time_series_cv_plan(): Unnests cross validation plan","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/time_series_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time Series Resampling Sets and Plans — time_series_cv","text":"","code":"# Generate Time Series Resamples resamples_tscv <- time_series_cv(     data        = m750,     assess      = \"2 years\",     initial     = \"5 years\",     skip        = \"2 years\",     slice_limit = 4 ) #> Using date_var: date  resamples_tscv #> # Time Series Cross Validation Plan  #> # A tibble: 4 × 2 #>   splits          id     #>   <list>          <chr>  #> 1 <split [60/24]> Slice1 #> 2 <split [60/24]> Slice2 #> 3 <split [60/24]> Slice3 #> 4 <split [60/24]> Slice4  # Visualize the Resample Sets resamples_tscv %>%     tk_time_series_cv_plan() %>%     plot_time_series_cv_plan(         date, value,         .facet_ncol  = 2,         .interactive = FALSE     )"},{"path":"https://business-science.github.io/modeltime.resample/reference/unnest_modeltime_resamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnests the Results of Modeltime Fit Resamples — unnest_modeltime_resamples","title":"Unnests the Results of Modeltime Fit Resamples — unnest_modeltime_resamples","text":"internal function used modeltime_resample_accuracy().","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/unnest_modeltime_resamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnests the Results of Modeltime Fit Resamples — unnest_modeltime_resamples","text":"","code":"unnest_modeltime_resamples(object)"},{"path":"https://business-science.github.io/modeltime.resample/reference/unnest_modeltime_resamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnests the Results of Modeltime Fit Resamples — unnest_modeltime_resamples","text":"object Modeltime Table column '.resample_results'","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/unnest_modeltime_resamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unnests the Results of Modeltime Fit Resamples — unnest_modeltime_resamples","text":"Tibble columns '.row_id', '.resample_id', '.model_id', '.model_desc', '.pred', '.row', actual value name data set","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/unnest_modeltime_resamples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unnests the Results of Modeltime Fit Resamples — unnest_modeltime_resamples","text":"following data columns unnested prepared evaluation: .row_id - unique identifier compare observations. .resample_id - unique identifier given resample iteration. .model_id .model_desc - Modeltime Model ID Description .pred - Resample Prediction Value .row - actual row value original dataset Actual Value Column - name changes target variable name dataset","code":""},{"path":"https://business-science.github.io/modeltime.resample/reference/unnest_modeltime_resamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unnests the Results of Modeltime Fit Resamples — unnest_modeltime_resamples","text":"","code":"# The .resample_results column is deeply nested m750_training_resamples_fitted #> # Modeltime Table #> # A tibble: 3 × 4 #>   .model_id .model     .model_desc             .resample_results #>       <int> <list>     <chr>                   <list>            #> 1         1 <workflow> ARIMA(0,1,1)(0,1,1)[12] <rsmp[+]>         #> 2         2 <workflow> PROPHET                 <rsmp[+]>         #> 3         3 <workflow> GLMNET                  <rsmp[+]>          # Unnest and prepare the resample predictions for evaluation unnest_modeltime_resamples(m750_training_resamples_fitted) #> # A tibble: 432 × 7 #>    .row_id .resample_id .model_id .model_desc              .pred  .row value #>      <int> <chr>            <int> <chr>                    <dbl> <int> <dbl> #>  1       1 Slice1               1 ARIMA(0,1,1)(0,1,1)[12]  9033.   259  8800 #>  2       2 Slice1               1 ARIMA(0,1,1)(0,1,1)[12]  9329.   260  9360 #>  3       3 Slice1               1 ARIMA(0,1,1)(0,1,1)[12]  9507.   261  9650 #>  4       4 Slice1               1 ARIMA(0,1,1)(0,1,1)[12] 10157.   262 10280 #>  5       5 Slice1               1 ARIMA(0,1,1)(0,1,1)[12] 10308.   263 10410 #>  6       6 Slice1               1 ARIMA(0,1,1)(0,1,1)[12] 10202.   264 10240 #>  7       7 Slice1               1 ARIMA(0,1,1)(0,1,1)[12] 10278.   265 10380 #>  8       8 Slice1               1 ARIMA(0,1,1)(0,1,1)[12] 10277.   266 10390 #>  9       9 Slice1               1 ARIMA(0,1,1)(0,1,1)[12] 10478.   267 10580 #> 10      10 Slice1               1 ARIMA(0,1,1)(0,1,1)[12] 10500.   268 10560 #> # ℹ 422 more rows"},{"path":"https://business-science.github.io/modeltime.resample/news/index.html","id":"modeltimeresample-023","dir":"Changelog","previous_headings":"","what":"modeltime.resample 0.2.3","title":"modeltime.resample 0.2.3","text":"CRAN release: 2023-04-12 Resubmit CRAN (timetk issue)","code":""},{"path":"https://business-science.github.io/modeltime.resample/news/index.html","id":"modeltimeresample-022","dir":"Changelog","previous_headings":"","what":"modeltime.resample 0.2.2","title":"modeltime.resample 0.2.2","text":"CRAN release: 2022-10-18 Fix workflows mode = “regression”","code":""},{"path":"https://business-science.github.io/modeltime.resample/news/index.html","id":"modeltimeresample-021","dir":"Changelog","previous_headings":"","what":"modeltime.resample 0.2.1","title":"modeltime.resample 0.2.1","text":"CRAN release: 2022-06-07","code":""},{"path":"https://business-science.github.io/modeltime.resample/news/index.html","id":"fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"modeltime.resample 0.2.1","text":"Updates hardhat 1.0.0 #11","code":""},{"path":"https://business-science.github.io/modeltime.resample/news/index.html","id":"modeltimeresample-020","dir":"Changelog","previous_headings":"","what":"modeltime.resample 0.2.0","title":"modeltime.resample 0.2.0","text":"CRAN release: 2021-03-14 modeltime_resample_accuracy() (#1): user specifies summary_fns = NULL, returns unsummarized resample metrics “.resample_id”","code":""},{"path":"https://business-science.github.io/modeltime.resample/news/index.html","id":"modeltimeresample-010","dir":"Changelog","previous_headings":"","what":"modeltime.resample 0.1.0","title":"modeltime.resample 0.1.0","text":"CRAN release: 2020-11-05 Initial modeltime.resample Package Release","code":""}]
